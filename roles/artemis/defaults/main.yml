---
artemis_version: 5.2.3
is_testserver: false
is_multinode_install: false

artemis_server_url: https://artemis.ase.in.tum.de
artemis_server_port: 8080

install_artemis: true
upgrade_artemis: false

check_variables: true

only_update_artemis_config: false

##############################################################################
# Artemis Linux Users
##############################################################################

# Artemis service user configuration
artemis_user_name: artemis
artemis_user_group: artemis
artemis_user_uid: 1337
artemis_user_gid: 1337

# Artemis deployment user configuration
artemis_create_deployment_user: false
artemis_deployment_user_name: deploymentuser
artemis_deployment_user_uid: 1338
artemis_deployment_user_public_key: ""
artemis_deployment_user_comment: "User to deploy artemis to this host"


##############################################################################
# Java Setup
##############################################################################

openjdk_version: 17


##############################################################################
# Artemis
##############################################################################

artemis_internal_admin_user: artemis_admin
artemis_internal_admin_password:

artemis_jhipster_jwt: #FIXME Multinode
artemis_jhipster_registry_password: #FIXME Multinode

artemis_email: artemis.in@tum.de
artemis_notification_from: "Artemis Notification"

artemis_working_directory: "/opt/artemis"
artemis_repo_basepath: "."

artemis_ssh_key_path: /opt/keys
artemis_ssh_key_name: "artemis_ssh_key"
artemis_ssh_priv_key_value: #FIXME
artemis_ssh_key_password:

artemis_force_restart: false        # Will restart the artemis service on all nodes (unless artemis_force_no_restart) is set
artemis_force_no_restart: false     # Will prevent the restart of the artemis service on all nodes

artemis_build_version: "{{ artemis_version }}"
artemis_war_version: "{{ artemis_build_version }}"
artemis_war_url: "https://github.com/ls1intum/Artemis/releases/download/{{ artemis_war_version }}/Artemis.war"

artemis_system_ram_proportion: 0.8  # How much % of the system RAM to allocate to the Artemis service (Default here: 80%)

artemis_database_host: localhost
artemis_database_dbname: artemis
artemis_database_username: artemis
artemis_database_password: #FIXME
artemis_database_encoding: utf8mb4
artemis_database_collation: utf8mb4_unicode_ci

# mysql or postgresql 
artemis_database_protocol: mysql
#TODO: Auto generate this port depending on `artemis_database_protocol`
artemis_database_port: 3306
artemis_database_connection_string_options: "?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=utf8&allowPublicKeyRetrieval=true&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC"

artemis_encryption_password: #FIXME
artemis_bcrypt_salt_rounds: 11

artemis_account_login_info: "TUM"

shared_monitoring_host_v4:

# If the password of some users is stored externally, you need to provide a name and the reset links. They will be displayed as a hint in the reset form of Artemis.
# You need to at least provide the provider and the English reset link.
artemis_external_password_provider: TUMonline
artemis_external_password_reset_link_en: "https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/pl/ui/$ctx/co_loc_password_reset.main?$ctx=design=ca2;header=max;lang=en"
artemis_external_password_reset_link_de: "https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/pl/ui/$ctx/co_loc_password_reset.main?$ctx=design=ca2;header=max;lang=de"
  #ldap:
  #  url: "ldaps://iauth.tum.de:636"
  #  user_dn: "cn=TUINI01-Artemis,ou=bindDNs,ou=iauth,dc=tum,dc=de"
  #  base: "ou=users,ou=data,ou=prod,ou=iauth,dc=tum,dc=de"
  #  password:
  #
  #user_management:
  #  jira:
  #    url:
  #    user:
  #    password:
  #    admin_group:
  #
  #bitbucket_hostname: bitbucket.example.com
  #version_control:
  #  bitbucket:
  #    url: "https://{{ bitbucket_hostname }}/"
  #    ssh_url: "ssh://git@{{ bitbucket_hostname }}:7999/"
  #    token:
  #
  #  gitlab:
  #    url: 
  #    user: 
  #    password: 
  #    token: 
  #    ci_token: 
  #    health_api_token: 
  #    ssh_url:
  #
  #continuous_integration:
  #  bamboo:
  #    url:
  #    token:
  #    bitbucket_link_name:
  #    result_plugin_token:
  #
  #  jenkins:
  #    url: 
  #    user: 
  #    password:
  #    secret_push_token:
  #    vcs_credentials:
  #    artemis_auth_token_key:
  #    artemis_auth_token_value:
  #
  #athene:
  #  url:
  #  secret:
  #
  #apollon_url: #https://apollon.ase.in.tum.de/api/converter
  #
  #lti:
  #  oauth_secret:
  #
  #mail:
  #  hostname:
  #  port:
  #  username:
  #  password:
  #  protocol:
  #  ssl_trust:
  #
  #
  ###############################################################################
  ## Message Broker
  ###############################################################################
  #
  #broker:  #FIXME Multinode
  #  url:
  #  user:
  #  password:
  #

# Define node local hazelcast_address - Uses wireguard net by default
hazelcast_address: "{% if is_multinode_install is defined and is_multinode_install|bool == true %}[{{ wireguard_interface_address }}]{% endif %}"

artemis_eureka_urls: "{% if broker.url is defined and broker.url is not none %}http://admin:${jhipster.registry.password}@{{ broker.url }}:8761/eureka/{% endif %}"
artemis_eureka_instance_id: "{{ node_id }}"

##############################################################################
# Auto-generated Variables - No not alter!
##############################################################################

# Compute Spring Profiles from set variables
artemis_spring_profile_env: "prod"
artemis_spring_profile_user_management: "{% if user_management.jira is defined and user_management.jira is not none %},jira{% endif %}" # none HAS to be lowercase ¯\_(ツ)_/¯
artemis_spring_profile_ldap: "{% if ldap.password is defined and ldap.password is not none %},ldap{% endif %}"
artemis_spring_profile_version_control: "{% if version_control.bitbucket is defined and version_control.bitbucket is not none %},bitbucket{% elif version_control.gitlab is defined and version_control.gitlab is not none %},gitlab{% endif %}"
artemis_spring_profile_continuous_integration: "{% if continuous_integration.bamboo is defined and continuous_integration.bamboo is not none %},bamboo{% elif continuous_integration.jenkins is defined and continuous_integration.jenkins is not none %},jenkins{% endif %}"
artemis_spring_profile_athene: "{% if athene is defined and athene is not none %},athene{% endif %}"
artemis_spring_profile_scheduling: "{% if node_id is defined and node_id == 1 %},scheduling{% endif %}"
artemis_spring_profiles: "{{ artemis_spring_profile_env }}{{ artemis_spring_profile_user_management }}{{ artemis_spring_profile_ldap }}{{ artemis_spring_profile_version_control }}{{ artemis_spring_profile_continuous_integration }}{{ artemis_spring_profile_athene }}{{ artemis_spring_profile_scheduling }}"
