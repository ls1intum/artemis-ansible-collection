- name: Create artemis directory
  become: true
  file:
    path: "{{ artemis_working_directory }}"
    state: directory
    mode: '0775'

- name: Create artemis data directory
  become: true
  file:
    path: "{{ artemis_working_directory }}/data"
    state: directory
    mode: '0770'

- name: Create artemis database directory
  become: true
  file:
    path: "{{ artemis_working_directory }}/data/database"
    state: directory
    mode: '0770'

- name: Create artemis data/artemis directory
  become: true
  file:
    path: "{{ artemis_working_directory }}/data/artemis"
    state: directory
    mode: '0770'

- name: Set permissions for artemis directory
  become: true
  file:
    path: "{{ artemis_working_directory }}"
    state: directory
    recurse: yes
    owner: "{{ artemis_user_name }}"
    group: "{{ artemis_user_group }}"
  register: permissions
  notify: restart docker artemis

- name: Set permissions for postgres directory
  become: true
  file:
    path: "{{ artemis_working_directory }}/data/database"
    state: directory
    recurse: yes
    # Must match UID and GID used for the postgres user
    # See e.g. https://hub.docker.com/layers/library/postgres/16.1-alpine/images/sha256-b788d196db04847b17df664f4ae18062e712328d225b9ff75d4d7cd91a16c374?context=explore
    owner: "70"
    group: "70"
  when: artemis_database_type == "postgresql"
  notify: restart docker artemis

- name: Copy docker.env to artemis directory
  become: true
  template:
    src: "templates/docker.env.j2"
    dest: "{{ artemis_working_directory }}/docker.env"
    owner: "{{ artemis_user_name }}"
    group: "{{ artemis_user_group }}"
    mode: 0660
  register: config
  notify: restart docker artemis

- name: Copy artemis.env to artemis directory
  become: true
  template:
    src: "templates/artemis.env.j2"
    dest: "{{ artemis_working_directory }}/artemis.env"
    owner: "{{ artemis_user_name }}"
    group: "{{ artemis_user_group }}"
    mode: 0660
  register: config
  notify: restart docker artemis

- name: Copy database.env to artemis directory
  become: true
  template:
    src: "templates/database.env.j2"
    dest: "{{ artemis_working_directory }}/database.env"
    owner: "{{ artemis_user_name }}"
    group: "{{ artemis_user_group }}"
    mode: 0660
  register: config
  notify: restart docker artemis

- name: Copy node env files
  loop: "{{ range(1, artemis_node_count + 1) }}"
  loop_control:
    loop_var: docker_node_id
  when: is_multinode_install
  become: true
  template:
    src: "templates/node.env.j2"
    dest: "{{ artemis_working_directory }}/node{{ docker_node_id }}.env"
    owner: "{{ artemis_user_name }}"
    group: "{{ artemis_user_group }}"
    mode: 0660
  register: config
  notify: restart docker artemis

- name: Create artemis ssh key directory
  become: true
  file:
    path: "{{ artemis_ssh_key_path }}"
    state: directory
    mode: '0775'
  when: artemis_ssh_key_path is not none and artemis_ssh_key_path != ""

- name: Copy ssh key
  become: true
  copy:
    content: "{{ artemis_ssh_priv_key_value }}"
    dest: "{{ artemis_ssh_key_path }}/{{ artemis_ssh_key_name }}"
  register: ssh_key
  notify: restart docker artemis
  when: artemis_ssh_key_path is not none and artemis_ssh_key_path != ""

- name: Set permissions for artemis ssh key directory
  become: true
  file:
    path: "{{ artemis_ssh_key_path }}"
    state: directory
    recurse: yes
    owner: "{{ artemis_user_name }}"
    group: "{{ artemis_user_group }}"
    mode: '0770'
  when: artemis_ssh_key_path is not none and artemis_ssh_key_path != ""

- name: Create artemis data-export directory
  become: true
  file:
    path: "{{ artemis_data_export_path }}"
    state: directory
    mode: '0775'
  when: artemis_data_export_path is not none and artemis_data_export_path != ""

- name: Set permissions for artemis data-export directory
  become: true
  file:
    path: "{{ artemis_data_export_path }}"
    state: directory
    recurse: true
    owner: "{{ artemis_user_name }}"
    group: "{{ artemis_user_group }}"
  when: artemis_data_export_path is not none and artemis_data_export_path != ""

- name: Copy artemis-docker.sh helper script
  become: true
  template:
    src: "templates/artemis-docker.sh.j2"
    dest: "{{ artemis_working_directory }}/artemis-docker.sh"
    owner: "{{ artemis_user_name }}"
    group: "{{ artemis_user_group }}"
    mode: 0770
  register: config
  notify: restart docker artemis


