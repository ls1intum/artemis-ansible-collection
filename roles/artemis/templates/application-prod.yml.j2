{{ ansible_managed | comment }}

spring:
{% if artemis_computed_is_core_node %}
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:{{ artemis_database_type }}://{{ artemis_database_host }}:{{ artemis_database_port }}/{{ artemis_database_dbname }}?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=utf8&allowPublicKeyRetrieval=true&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC
    username: {{ artemis_database_username }}
    password: {{ artemis_database_password }}
    hikari:
      poolName: Hikari
      auto-commit: false
      maximumPoolSize: 100
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
  jpa:
    database-platform: {{ artemis_database_platform }}
    database: {{ artemis_database_type|upper }}
    hibernate:
      connection:
        charSet: {{ artemis_database_encoding }}
        characterEncoding: {{ artemis_database_encoding }}
        useUnicode: true
{% if is_multinode_install and broker is defined %}
  websocket:
    broker:
      username: {{ broker.username }}
      password: {{ broker.password }}
      addresses: "{{ broker.url }}:61613"
{% endif %}
{% endif %}
{% if is_multinode_install and hazelcast_address is defined %}
  hazelcast:
    interface: "{{ hazelcast_address }}"
{% endif %}

{% if artemis_computed_is_core_node %}
{% if shared_monitoring_host_v4 is not none %}
  prometheus:
    monitoringIp: "{{ shared_monitoring_host_v4 }}"
{% endif %}

{% if mail is defined and mail is not none %}
  mail:
    host: {{ mail.hostname }}
    port: {{ mail.port }}
    username: {{ mail.username }}
    password: {{ mail.password }}
    protocol: {{ mail.protocol }}
    tls: true
    properties.mail.smtp:
      auth: true
      starttls:
        enable: true
      ssl:
        trust: {{ mail.ssl_trust }}
{% endif %}
{% else %}
  liquibase:
      enabled: false #not needed for build agents
  autoconfigure:
      exclude:
          # Hibernate and DataSource are not needed in the build agent
          - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
          - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
          # Those metrics are repeated here, because overriding the `exclude` array is not possible
          - org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration
          - org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration
          - org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration
          - org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration
          - org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration
{% endif %}


server:
  port: {{ artemis_server_port }}
  url: {{ artemis_server_url }}
  use-forward-headers: true
  tomcat:
    remoteip:
      internal-proxies: 10\.\d{1,3}\.\d{1,3}\.\d{1,3}|192\.168\.\d{1,3}\.\d{1,3}|169\.254\.\d{1,3}\.\d{1,3}|127\.\d{1,3}\.\d{1,3}\.\d{1,3}|172\.1[6-9]{1}\.\d{1,3}\.\d{1,3}|172\.2[0-9]{1}\.\d{1,3}\.\d{1,3}|172\.3[0-1]{1}\.\d{1,3}\.\d{1,3}|0:0:0:0:0:0:0:1|::1|fcfe::f:1|fcfe:0:0:0:0:0:f:1

artemis:
{% if artemis_computed_is_core_node %}
  course-archives-path: {{ artemis_repo_basepath }}/course-archives
  repo-clone-path: {{ artemis_repo_basepath }}/repos
  repo-download-clone-path: {{ artemis_repo_basepath }}/repos-download
  file-upload-path: {{ artemis_repo_basepath }}/uploads
  submission-export-path: {{ artemis_repo_basepath }}/exports
  legal-path: {{ artemis_legal_path }}
  build-logs-path: {{ artemis_repo_basepath }}/build-logs
  data-export-path: {{ artemis_data_export_path }}
  bcrypt-salt-rounds: {{ artemis_bcrypt_salt_rounds }}
  user-management:
{% if user_management.jira is defined and user_management.jira is not none %}
    use-external: true
    external:
      url: {{ user_management.jira.url }}
      user: {{ user_management.jira.user }}
      password: {{ user_management.jira.password }}
      admin-group-name: {{ user_management.jira.admin_group}}
{% elif ldap.url is defined and ldap.url is not none%}
    use-external: true
{% else %}
    use-external: false
{% endif %}

{% if artemis_external_password_provider is defined and artemis_external_password_provider is not none %}
    password-reset:
      credential-provider: {{artemis_external_password_provider }}
      links:
        en: '{{ artemis_external_password_reset_link_en }}'
        de: '{{ artemis_external_password_reset_link_de }}'
{% endif %}
{% if ldap.url is defined and ldap.user_dn is defined and ldap.base is defined and ldap.password is defined %}
    ldap:
      url: {{ ldap.url }}
      user-dn: {{ ldap.user_dn }}
      base: {{ ldap.base }}
      password: "{{ ldap.password }}"
      allowed-username-pattern: '^([a-z]{2}\d{2}[a-z]{3})$'
{% endif %}
    internal-admin:
      username: {{ artemis_internal_admin_user }}
      password: {{ artemis_internal_admin_password }}
{% if user_management.registration is defined %}
    registration:
      enabled: true
      allowed-email-pattern: {{ user_management.registration.allowed_email_pattern }}
      allowed-email-pattern-readable: '{{ user_management.registration.allowed_email_pattern_readable }}'
      cleanup-time-minutes: {{ user_management.registration.cleanup_time_minutes }}
{% endif %}
    login:
      account-name: {{ artemis_account_login_info }}
{% endif %}
{% if version_control.bitbucket is defined %}
  version-control:
    url: {{ version_control.bitbucket.url }}
    user: {{ user_management.jira.user }}
    password: {{ user_management.jira.password }}
    token: {{ version_control.bitbucket.token }}
    ssh-template-clone-url: {{ version_control.bitbucket.ssh_url }}
    ssh-keys-url-path: /plugins/servlet/ssh/account/keys
{% if artemis_ssh_key_path is defined and artemis_ssh_key_path is not none and artemis_ssh_key_path != "" %}
    ssh-private-key-folder-path: {{ artemis_ssh_key_path }}
{% endif %}
{% if artemis_ssh_key_password is defined and artemis_ssh_key_password is not none and artemis_ssh_key_password != "" %}
    ssh-private-key-password: {{ artemis_ssh_key_password }}
{% endif %}
  telemetry:
    enabled: {{ artemis_telemetry_enabled }}
    sendAdminDetails: {{ artemis_send_admin_details }}
    destination: {{ artemis_telemetry_destination }}
{% endif %}


{% if version_control.gitlab is defined %}
  version-control:
    url: {{ version_control.gitlab.url }}
    user: {{ version_control.gitlab.user }}
    password: {{ version_control.gitlab.password }}
    token: {{ version_control.gitlab.token }}
    ci-token: {{ version_control.gitlab.ci_token }}
    health-api-token: {{ version_control.gitlab.health_api_token }}
    ssh-template-clone-url: {{ version_control.gitlab.ssh_url }}
    ssh-keys-url-path: /-/profile/keys
{% if artemis_ssh_key_path is defined and artemis_ssh_key_path is not none and artemis_ssh_key_path != "" %}
    ssh-private-key-folder-path: {{ artemis_ssh_key_path }}
{% endif %}
{% if artemis_ssh_key_password is defined and artemis_ssh_key_password is not none %}
    ssh-private-key-password: {{ artemis_ssh_key_password }}
{% endif %}
    default-branch: main
    versionControlAccessToken: true
{% endif %}

{% if version_control.localvc is defined %}
  version-control:
    url: {{ version_control.localvc.url }}
    local-vcs-repo-path: {{ version_control.localvc.repo_storage_base_path }}
    default-branch: {{ artemis_version_control_default_branch_name }}
{% if version_control.localvc.use_version_control_access_token is defined %}
    use-version-control-access-token: {{ version_control.localvc.use_version_control_access_token | lower }}
{% endif %}
{% if artemis_computed_is_core_node or (version_control.localvc.build_agent_git_credentials is not defined and version_control.localvc.build_agent_use_ssh is not defined) %}
    user: {{ artemis_internal_admin_user }}
    password: {{ artemis_internal_admin_password }}
{% endif %}
{% if version_control.localvc.build_agent_git_credentials is defined %}
    build-agent-git-username: {{ version_control.localvc.build_agent_git_credentials.user }}
    build-agent-git-password: {{ version_control.localvc.build_agent_git_credentials.password }}
{% endif %}
{% if version_control.localvc.build_agent_use_ssh is defined %}
    build-agent-use-ssh: {{ version_control.localvc.build_agent_use_ssh | string | lower }}
{% if continuous_integration.localci.is_build_agent is defined and continuous_integration.localci.is_build_agent is not none and continuous_integration.localci.is_build_agent and artemis_ssh_key_path is defined and artemis_ssh_key_path is not none and artemis_ssh_key_path != "" %}
    ssh-private-key-folder-path: {{ artemis_ssh_key_path }}
{% endif %}
{% endif %}
{% if version_control.localvc.ssh_key_path is defined and version_control.localvc.ssh_key_path|length > 0 %}
    ssh-host-key-path: {{ version_control.localvc.ssh_key_path }}
{% endif %}
{% if version_control.localvc.ssh_url is defined %}
    ssh-template-clone-url: {{ version_control.localvc.ssh_url }}
{% endif %}
{% endif %}

{% if continuous_integration.bamboo is defined %}
  continuous-integration:
    url: {{ continuous_integration.bamboo.url }}
    user: {{ user_management.jira.user }}
    password: {{ user_management.jira.password }}
    token: {{ continuous_integration.bamboo.token }}
    vcs-application-link-name: {{ continuous_integration.bamboo.bitbucket_link_name }}
    empty-commit-necessary: true
    artemis-authentication-token-value: {{ continuous_integration.bamboo.result_plugin_token }}
{% endif %}

{% if continuous_integration.jenkins is defined %}
  continuous-integration:
    url: {{ continuous_integration.jenkins.url }}
    user: {{ continuous_integration.jenkins.user }}
    password: {{ continuous_integration.jenkins.password }}
    empty-commit-necessary: false
    secret-push-token: {{ continuous_integration.jenkins.secret_push_token }}
    vcs-credentials: {{ continuous_integration.jenkins.vcs_credentials }}
    artemis-authentication-token-key: {{ continuous_integration.jenkins.artemis_auth_token_key }}
    artemis-authentication-token-value: {{ continuous_integration.jenkins.artemis_auth_token_value }}
{% endif %}

{% if continuous_integration.gitlabci is defined %}
  continuous-integration:
    build-timeout: 30
    artemis-authentication-token-value: {{ continuous_integration.gitlabci.result_token }}
    notification-plugin: "ls1tum/artemis-notification-plugin:1.0.0"
{% endif %}

{% if continuous_integration.localci is defined %}
  continuous-integration:
    artemis-authentication-token-value: "demo"
    specify-concurrent-builds: {{ (continuous_integration.localci.concurrent_build_size is defined) | lower }}
{% if continuous_integration.localci.concurrent_build_size is defined %}
    concurrent-build-size: {{ continuous_integration.localci.concurrent_build_size }}
{% endif %}
    specify-thread-pool-size: {{ (continuous_integration.localci.thread_pool_size is defined) | lower }}
{% if continuous_integration.localci.thread_pool_size is defined %}
    thread-pool-size: {{ continuous_integration.localci.thread_pool_size }}
{% endif %}
{% if continuous_integration.localci.proxy is defined %}
    proxies:
      use-system-proxy: true
      default:
        http-proxy: {{ continuous_integration.localci.proxy.http_proxy }}
        https-proxy: {{ continuous_integration.localci.proxy.https_proxy }}
        no-proxy: {{ continuous_integration.localci.proxy.no_proxy }}
{% endif %}
{% if continuous_integration.localci.image_cleanup is defined %}
    image-cleanup:
      enabled: true
      expiry-days: {{ continuous_integration.localci.image_cleanup.expiry_days }}
      cleanup-schedule-time: {{ continuous_integration.localci.image_cleanup.schedule_time }}
{% endif %}
{% endif %}

  git:
    name: artemis
    email: {{ artemis_email }}

{% if artemis_computed_is_core_node %}
{% if lti is defined %}
  lti:
    id: artemis_lti
    oauth-key: artemis_lti_key
    oauth-secret: {{ lti.oauth_secret }}
    user-prefix-edx: edx_
    user-prefix-u4i: u4i_
    user-group-name-edx: edx
    user-group-name-u4i: u4i
{% endif %}

{% if athena is defined %}
  athena:
    url: {{ athena.url }}
    secret: {{ athena.secret }}
    restricted-modules: {{ athena.restricted_modules }}
{% endif %}

{% if apollon_url is defined %}
  apollon:
    conversion-service-url: {{ apollon_url }}
{% endif %}
  scheduling:
    data-export-creation-time: {{ artemis_scheduling_data_export_creation_time }}
    programming-exercises-cleanup-time: {{ artemis_scheduling_programming_exercises_cleanup_time }}
    continuous-plagiarism-control-trigger-time: {{ artemis_scheduling_continuous_plagiarism_control_trigger_time }}
  data-export:
    days-between-data-exports: {{ artemis_data_export_days_between_data_exports }}
  plagiarism-checks:
    plagiarism-results-limit: {{ artemis_plagiarism_checks_plagiarism_results_limit }}

{% if iris is defined and iris is not none %}
  iris:
    url: {{ iris.url }}
    secret-token: {{ iris.secret }}
{% endif %}

{% if enable_science_event_logging is defined %}
  science:
    event-logging:
      enable: {{ enable_science_event_logging | lower }}
{% endif %}
{% endif %}

{% if theia is defined and theia is not none %}
theia:
{% if theia.portal_url is defined and theia.portal_url is not none %}
  portal-url: {{ theia.portal_url }}
{% endif %}
{% endif %}

{% if aeolus.url is defined and aeolus.url is not none %}
aeolus:
  url: {{ aeolus.url }}
{% if aeolus.token is defined and aeolus.token is not none %}
  token: {{ aeolus.token }}
{% endif %}
{% endif %}

jhipster:

{% if artemis_jhipster_jwt is not none %}
  security:
    authentication:
      jwt:
        base64-secret: {{ artemis_jhipster_jwt }}
        token-validity-in-seconds: 259200                   # Token is valid 3 days
        token-validity-in-seconds-for-remember-me: 2592000  # Token is valid 30 days
{% endif %}

{% if artemis_CORS_allowed_origins is defined and artemis_CORS_allowed_origins is not none %}
  cors:
    allowed-origins: {{ artemis_CORS_allowed_origins }}
{% endif %}

{% if is_multinode_install|bool == true and artemis_jhipster_registry_password is not none %}
  registry:
    password: {{ artemis_jhipster_registry_password }}
{% endif %}

  mail:
    base-url: {{ artemis_server_url }}
    from: '{{artemis_notification_from}} <{{ artemis_email.split("@")[0] }}+notification@{{ artemis_email.split("@")[1] }}>'

{% if artemis_computed_is_core_node %}
# Properties to be exposed on the /info management endpoint
info:
  guided-tour:
    courseShortName: 'artemistutorial'
    tours:
      - cancel_tour: ''
      - code_editor_tour: 'tutorial'
      - course_overview_tour: ''
      - course_exercise_overview_tour: 'tutorial'
      - modeling_tour: 'UML Class Diagram'
      - programming_exercise_fail_tour: 'tutorial'
      - programming_exercise_success_tour: 'tutorial'
  operatorName: {{ artemis_operator_name }}
  operatorAdminName: {{ artemis_operator_admin_name }}
  contact: {{ artemis_email }}
  imprint: https://ase.in.tum.de/lehrstuhl_1/component/content/article/179-imprint
{% if is_testserver is defined and is_testserver is sameas true %}
  test-server: true
{% endif %}
{% if is_testserver is defined and is_testserver is sameas false %}
  test-server: false
{% endif %}
  text-assessment-analytics-enabled: true
  sentry:
    dsn: https://ceeb3e72ec094684aefbb132f87231f2@sentry.ase.in.tum.de/2
{% if post_hog is defined %}
  post-hog:
    host: {{ post_hog.host }}
    token: {{ post_hog.token }}
{% endif %}
{% endif %}

{% if is_multinode_install and artemis_eureka_urls is defined and hazelcast_address is defined %}
# Eureka configuration
eureka:
  client:
    enabled: true
    service-url:
      defaultZone: {{ artemis_eureka_urls }}
  instance:
    prefer-ip-address: true
    ip-address: "{{ hazelcast_address }}"
    appname: Artemis
    instanceId: Artemis:{{ artemis_eureka_instance_id }}
{% endif %}

logging:
  file:
    name: '{{ artemis_working_directory }}/artemis.log'

management:
  prometheus:
    metrics:
      export:
        enabled: true
  # TODO: Remove after 7.0.0 is released & deployed
  metrics:
    export:
      prometheus:
        enabled: true

