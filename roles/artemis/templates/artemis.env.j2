SPRING_PROFILES_ACTIVE: '{{ artemis_spring_profiles }}'
_JAVA_OPTIONS: '-Xmx3g -Xms1g'

SPRING_DATASOURCE_TYPE='com.zaxxer.hikari.HikariDataSource'
SPRING_DATASOURCE_URL='jdbc:{{ artemis_database_type }}://{{ artemis_database_host }}:{{ artemis_database_port }}/{{ artemis_database_dbname }}?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=utf8&allowPublicKeyRetrieval=true&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC'
SPRING_DATASOURCE_USERNAME='{{ artemis_database_username }}'
SPRING_DATASOURCE_PASSWORD='{{ artemis_database_password }}'
SPRING_DATASOURCE_HIKARI_POOLNAME='Hikari'
SPRING_DATASOURCE_HIKARI_AUTOCOMMIT='false'
SPRING_DATASOURCE_HIKARI_MAXIMUMPOOLSIZE='100'
SPRING_DATASOURCE_HIKARI_DATASOURCEPROPERTIES_CACHEPREPSTMTS='true'
SPRING_DATASOURCE_HIKARI_DATASOURCEPROPERTIES_PREPSTMTCACHESIZE='250'
SPRING_DATASOURCE_HIKARI_DATASOURCEPROPERTIES_PREPSTMTCACHESQLLIMIT='2048'
SPRING_DATASOURCE_HIKARI_DATASOURCEPROPERTIES_USESERVERPREPSTMTS='true'
SPRING_JPA_DATABASEPLATFORM='{{ artemis_database_platform }}'
SPRING_JPA_DATABASE='{{ artemis_database_type|upper }}'
SPRING_JPA_HIBERNATE_CONNECTION_CHARSET='{{ artemis_database_encoding }}'
SPRING_JPA_HIBERNATE_CONNECTION_CHARACTERENCODING='{{ artemis_database_encoding }}'
SPRING_JPA_HIBERNATE_CONNECTION_USEUNICODE='true'
{% if is_multinode_install and broker is defined %}
SPRING_WEBSOCKET_BROKER_USERNAME='{{ broker.username }}'
SPRING_WEBSOCKET_BROKER_PASSWORD='{{ broker.password }}'
SPRING_WEBSOCKET_BROKER_ADDRESSES='{{ broker.url }}:61613'
{% endif %}
{% if is_multinode_install and hazelcast_address is defined %}
SPRING_HAZELCAST_INTERFACE='{{ hazelcast_address }}'
{% endif %}
{% if shared_monitoring_host_v4 is not none %}
SPRING_PROMETHEUS_MONITORINGIP='{{ shared_monitoring_host_v4 }}'
{% endif %}
{% if mail is defined and mail is not none %}
SPRING_MAIL_HOST='{{ mail.hostname }}'
SPRING_MAIL_PORT='{{ mail.port }}'
SPRING_MAIL_USERNAME='{{ mail.username }}'
SPRING_MAIL_PASSWORD='{{ mail.password }}'
SPRING_MAIL_PROTOCOL='{{ mail.protocol }}'
SPRING_MAIL_TLS='true'
SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH='true'
SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE='true'
SPRING_MAIL_PROPERTIES_MAIL_SMTP_SSL_TRUST='{{ mail.ssl_trust }}'
{% endif %}
SERVER_PORT='{{ artemis_server_port }}'
SERVER_URL='{{ artemis_server_url }}'
SERVER_USEFORWARDHEADERS='true'
SERVER_TOMCAT_REMOTEIP_INTERNALPROXIES='10\.\d{1,3}\.\d{1,3}\.\d{1,3}|192\.168\.\d{1,3}\.\d{1,3}|169\.254\.\d{1,3}\.\d{1,3}|127\.\d{1,3}\.\d{1,3}\.\d{1,3}|172\.1[6-9]{1}\.\d{1,3}\.\d{1,3}|172\.2[0-9]{1}\.\d{1,3}\.\d{1,3}|172\.3[0-1]{1}\.\d{1,3}\.\d{1,3}|0:0:0:0:0:0:0:1|::1|fcfe::f:1|fcfe:0:0:0:0:0:f:1'
ARTEMIS_COURSEARCHIVESPATH='{{ artemis_repo_basepath }}/course-archives'
ARTEMIS_REPOCLONEPATH='{{ artemis_repo_basepath }}/repos'
ARTEMIS_REPODOWNLOADCLONEPATH='{{ artemis_repo_basepath }}/repos-download'
ARTEMIS_FILEUPLOADPATH='{{ artemis_repo_basepath }}/uploads'
ARTEMIS_SUBMISSIONEXPORTPATH='{{ artemis_repo_basepath }}/exports'
ARTEMIS_LEGALPATH='{{ artemis_legal_path }}'
ARTEMIS_DATAEXPORTPATH='{{ artemis_data_export_path }}'
ARTEMIS_BCRYPTSALTROUNDS='{{ artemis_bcrypt_salt_rounds }}'
{% if user_management.jira is defined and user_management.jira is not none %}
ARTEMIS_USERMANAGEMENT_USEEXTERNAL='true'
ARTEMIS_USERMANAGEMENT_EXTERNAL_URL='{{ user_management.jira.url }}'
ARTEMIS_USERMANAGEMENT_EXTERNAL_USER='{{ user_management.jira.user }}'
ARTEMIS_USERMANAGEMENT_EXTERNAL_PASSWORD='{{ user_management.jira.password }}'
ARTEMIS_USERMANAGEMENT_EXTERNAL_ADMINGROUPNAME='{{ user_management.jira.admin_group}}'
ARTEMIS_USERMANAGEMENT_PASSWORDRESET_CREDENTIALPROVIDER='{{artemis_external_password_provider }}'
ARTEMIS_USERMANAGEMENT_PASSWORDRESET_LINKS_EN='{{ artemis_external_password_reset_link_en }}'
ARTEMIS_USERMANAGEMENT_PASSWORDRESET_LINKS_DE='{{ artemis_external_password_reset_link_de }}'
{% else %}
ARTEMIS_USERMANAGEMENT_USEEXTERNAL='false'
{% endif %}
{% if ldap.url is defined and ldap.user_dn is defined and ldap.base is defined and ldap.password is defined %}
ARTEMIS_USERMANAGEMENT_LDAP_URL='{{ ldap.url }}'
ARTEMIS_USERMANAGEMENT_LDAP_USERDN='{{ ldap.user_dn }}'
ARTEMIS_USERMANAGEMENT_LDAP_BASE='{{ ldap.base }}'
ARTEMIS_USERMANAGEMENT_LDAP_PASSWORD='{{ ldap.password }}'
ARTEMIS_USERMANAGEMENT_LDAP_ALLOWEDUSERNAMEPATTERN='^([a-z]{2}\d{2}[a-z]{3})$'
{% endif %}
ARTEMIS_USERMANAGEMENT_INTERNALADMIN_USERNAME='{{ artemis_internal_admin_user }}'
ARTEMIS_USERMANAGEMENT_INTERNALADMIN_PASSWORD='{{ artemis_internal_admin_password }}'
{% if user_management.registration is defined %}
ARTEMIS_USERMANAGEMENT_REGISTRATION_ENABLED='true'
ARTEMIS_USERMANAGEMENT_REGISTRATION_ALLOWEDEMAILPATTERN='{{ user_management.registration.allowed_email_pattern }}'
ARTEMIS_USERMANAGEMENT_REGISTRATION_ALLOWEDEMAILPATTERNREADABLE='{{ user_management.registration.allowed_email_pattern_readable }}'
ARTEMIS_USERMANAGEMENT_REGISTRATION_CLEANUPTIMEMINUTES='{{ user_management.registration.cleanup_time_minutes }}'
{% endif %}
{% if version_control.bitbucket is defined %}
ARTEMIS_VERSIONCONTROL_URL='{{ version_control.bitbucket.url }}'
ARTEMIS_VERSIONCONTROL_USER='{{ user_management.jira.user }}'
ARTEMIS_VERSIONCONTROL_PASSWORD='{{ user_management.jira.password }}'
ARTEMIS_VERSIONCONTROL_TOKEN='{{ version_control.bitbucket.token }}'
ARTEMIS_VERSIONCONTROL_SSHTEMPLATECLONEURL='{{ version_control.bitbucket.ssh_url }}'
ARTEMIS_VERSIONCONTROL_SSHKEYSURLPATH='/plugins/servlet/ssh/account/keys'
{% if artemis_ssh_key_path is defined and artemis_ssh_key_path is not none and artemis_ssh_key_path != "" %}
ARTEMIS_VERSIONCONTROL_SSHPRIVATEKEYFOLDERPATH='{{ artemis_ssh_key_path }}'
{% endif %}
{% if artemis_ssh_key_password is defined and artemis_ssh_key_password is not none %}
ARTEMIS_VERSIONCONTROL_SSHPRIVATEKEYPASSWORD='{{ artemis_ssh_key_password }}'
{% endif %}
{% endif %}
{% if continuous_integration.bamboo is defined %}
ARTEMIS_CONTINUOUSINTEGRATION_URL='{{ continuous_integration.bamboo.url }}'
ARTEMIS_CONTINUOUSINTEGRATION_USER='{{ user_management.jira.user }}'
ARTEMIS_CONTINUOUSINTEGRATION_PASSWORD='{{ user_management.jira.password }}'
ARTEMIS_CONTINUOUSINTEGRATION_TOKEN='{{ continuous_integration.bamboo.token }}'
ARTEMIS_CONTINUOUSINTEGRATION_VCSAPPLICATIONLINKNAME='{{ continuous_integration.bamboo.bitbucket_link_name }}'
ARTEMIS_CONTINUOUSINTEGRATION_EMPTYCOMMITNECESSARY='true'
ARTEMIS_CONTINUOUSINTEGRATION_ARTEMISAUTHENTICATIONTOKENVALUE='{{ continuous_integration.bamboo.result_plugin_token }}'
{% endif %}
{% if version_control.gitlab is defined %}
ARTEMIS_VERSIONCONTROL_URL='{{ version_control.gitlab.url }}'
ARTEMIS_VERSIONCONTROL_USER='{{ version_control.gitlab.user }}'
ARTEMIS_VERSIONCONTROL_PASSWORD='{{ version_control.gitlab.password }}'
ARTEMIS_VERSIONCONTROL_TOKEN='{{ version_control.gitlab.token }}'
ARTEMIS_VERSIONCONTROL_CITOKEN='{{ version_control.gitlab.ci_token }}'
ARTEMIS_VERSIONCONTROL_HEALTHAPITOKEN='{{ version_control.gitlab.health_api_token }}'
ARTEMIS_VERSIONCONTROL_SSHTEMPLATECLONEURL='{{ version_control.gitlab.ssh_url }}'
ARTEMIS_VERSIONCONTROL_SSHKEYSURLPATH='/-/profile/keys'
{% if artemis_ssh_key_path is defined and artemis_ssh_key_path is not none and artemis_ssh_key_path != "" %}
ARTEMIS_VERSIONCONTROL_SSHPRIVATEKEYFOLDERPATH='{{ artemis_ssh_key_path }}'
{% endif %}
ARTEMIS_VERSIONCONTROL_DEFAULTBRANCH='main'
ARTEMIS_VERSIONCONTROL_VERSIONCONTROLACCESSTOKEN='true'
{% if artemis_ssh_key_password is defined and artemis_ssh_key_password is not none %}
ARTEMIS_VERSIONCONTROL_SSHPRIVATEKEYPASSWORD='{{ artemis_ssh_key_password }}'
{% endif %}
{% endif %}
{% if continuous_integration.jenkins is defined %}
ARTEMIS_CONTINUOUSINTEGRATION_URL='{{ continuous_integration.jenkins.url }}'
ARTEMIS_CONTINUOUSINTEGRATION_USER='{{ continuous_integration.jenkins.user }}'
ARTEMIS_CONTINUOUSINTEGRATION_PASSWORD='{{ continuous_integration.jenkins.password }}'
ARTEMIS_CONTINUOUSINTEGRATION_EMPTYCOMMITNECESSARY='false'
ARTEMIS_CONTINUOUSINTEGRATION_SECRETPUSHTOKEN='{{ continuous_integration.jenkins.secret_push_token }}'
ARTEMIS_CONTINUOUSINTEGRATION_VCSCREDENTIALS='{{ continuous_integration.jenkins.vcs_credentials }}'
ARTEMIS_CONTINUOUSINTEGRATION_ARTEMISAUTHENTICATIONTOKENKEY='{{ continuous_integration.jenkins.artemis_auth_token_key }}'
ARTEMIS_CONTINUOUSINTEGRATION_ARTEMISAUTHENTICATIONTOKENVALUE='{{ continuous_integration.jenkins.artemis_auth_token_value }}'
{% endif %}
{% if version_control.localvc is defined %}
ARTEMIS_VERSIONCONTROL_URL='{{ version_control.localvc.url }}'
ARTEMIS_VERSIONCONTROL_LOCALVCSREPOPATH='{{ artemis_repo_basepath }}/local-vcs-repos'
{% if artemis_computed_is_core_node or version_control.localvc.build_agent_git_credentials is not defined %}
ARTEMIS_VERSIONCONTROL_USER='{{ artemis_internal_admin_user }}'
ARTEMIS_VERSIONCONTROL_PASSWORD='{{ artemis_internal_admin_password }}'
{% endif %}
{% if version_control.localvc.build_agent_git_credentials is defined %}
ARTEMIS_VERSIONCONTROL_BUILDAGENTGITUSERNAME='{{ version_control.localvc.build_agent_git_credentials.user }}'
ARTEMIS_VERSIONCONTROL_BUILDAGENTGITPASSWORD='{{ version_control.localvc.build_agent_git_credentials.password }}'
{% endif %}
{% if version_control.localvc.ssh_key_path is defined and version_control.localvc.ssh_key_path|length > 0 %}
ARTEMIS_VERSIONCONTROL_SSHHOSTKEYPATH='{{ artemis_repo_basepath }}/ssh-keys'
{% endif %}
{% endif %}
{% if continuous_integration.localci is defined %}
ARTEMIS_CONTINUOUSINTEGRATION_ARTEMISAUTHENTICATIONTOKENVALUE='demo'
ARTEMIS_CONTINUOUSINTEGRATION_DOCKERCONNECTIONURI='unix:///var/run/docker.sock'
ARTEMIS_CONTINUOUSINTEGRATION_SPECIFYCONCURRENTBUILDS='{{ (continuous_integration.localci.concurrent_build_size is defined) | lower }}'
{% if continuous_integration.localci.concurrent_build_size is defined %}
ARTEMIS_CONTINUOUSINTEGRATION_CONCURRENTBUILDSIZE='{{ continuous_integration.localci.concurrent_build_size }}'
{% endif %}
ARTEMIS_CONTINUOUSINTEGRATION_SPECIFYTHREADPOOLSIZE='{{ (continuous_integration.localci.thread_pool_size is defined) | lower }}'
{% if continuous_integration.localci.thread_pool_size is defined %}
ARTEMIS_CONTINUOUSINTEGRATION_THREADPOOLSIZE='{{ continuous_integration.localci.thread_pool_size }}'
{% endif %}
{% if continuous_integration.localci.proxy is defined %}
ARTEMIS_CONTINUOUSINTEGRATION_PROXIES_USESYSTEMPROXY='true'
ARTEMIS_CONTINUOUSINTEGRATION_PROXIES_DEFAULT_HTTPPROXY='{{ continuous_integration.localci.proxy.http_proxy }}'
ARTEMIS_CONTINUOUSINTEGRATION_PROXIES_DEFAULT_HTTPSPROXY='{{ continuous_integration.localci.proxy.https_proxy }}'
ARTEMIS_CONTINUOUSINTEGRATION_PROXIES_DEFAULT_NOPROXY='{{ continuous_integration.localci.proxy.no_proxy }}'
{% endif %}
{% if continuous_integration.localci.image_cleanup is defined %}
ARTEMIS_CONTINUOUSINTEGRATION_IMAGECLEANUP_ENABLED='true'
ARTEMIS_CONTINUOUSINTEGRATION_IMAGECLEANUP_EXPIRYDAYS='{{ continuous_integration.localci.image_cleanup.expiry_days }}'
ARTEMIS_CONTINUOUSINTEGRATION_IMAGECLEANUP_CLEANUPSCHEDULETIME='{{ continuous_integration.localci.image_cleanup.schedule_time }}'
{% endif %}
{% endif %}
{% if continuous_integration.gitlabci is defined %}
ARTEMIS_CONTINUOUSINTEGRATION_BUILDTIMEOUT=30
ARTEMIS_CONTINUOUSINTEGRATION_ARTEMISAUTHENTICATIONTOKENVALUE={{ continuous_integration.gitlabci.result_token }}
ARTEMIS_CONTINUOUSINTEGRATION_NOTIFICATIONPLUGIN: "ls1tum/artemis-notification-plugin:1.0.0"
{% endif %}
ARTEMIS_USERMANAGEMENT_LOGIN_ACCOUNTNAME='{{ artemis_account_login_info }}'
{% if lti is defined %}
ARTEMIS_LTI_ID='artemis_lti'
ARTEMIS_LTI_OAUTHKEY='artemis_lti_key'
ARTEMIS_LTI_OAUTHSECRET='{{ lti.oauth_secret }}'
ARTEMIS_LTI_USERPREFIXEDX='edx_'
ARTEMIS_LTI_USERPREFIXU4I='u4i_'
ARTEMIS_LTI_USERGROUPNAMEEDX='edx'
ARTEMIS_LTI_USERGROUPNAMEU4I='u4i'
{% endif %}
ARTEMIS_GIT_NAME='artemis'
ARTEMIS_GIT_EMAIL='{{ artemis_email }}'
{% if athena is defined %}
ARTEMIS_ATHENA_URL='{{ athena.url }}'
ARTEMIS_ATHENA_SECRET='{{ athena.secret }}'
{% endif %}
{% if apollon_url is defined %}
ARTEMIS_APOLLON_CONVERSIONSERVICEURL='{{ apollon_url }}'
{% endif %}
{% if iris is defined and iris is not none %}
ARTEMIS_IRIS_URL='{{ iris.url }}'
ARTEMIS_IRIS_SECRETTOKEN='{{ iris.secret }}'
{% endif %}
{% if enable_science_event_logging is defined %}
ARTEMIS_SCIENCE_EVENTLOGGING_ENABLE='{{ enable_science_event_logging | lower }}'
{% endif %}
{% if theia is defined and theia is not none %}
{% if theia.portal_url is defined and theia.portal_url is not none %}
THEIA_PORTALURL='{{ theia.portal_url }}'
{% endif %}
{% endif %}
{% if aeolus.url is defined and aeolus.url is not none %}
AEOLUS_URL='{{ aeolus.url }}'
{% if aeolus.token is defined and aeolus.token is not none %}
AEOLUS_TOKEN='{{ aeolus.token }}'
{% endif %}
{% endif %}
ARTEMIS_SCHEDULING_DATAEXPORTCREATIONTIME = '{{ artemis_scheduling_data_export_creation_time }}'
ARTEMIS_SCHEDULING_PROGRAMMINGEXERCISESCLEANUPTIME = '{{ artemis_scheduling_programming_exercises_cleanup_time }}'
ARTEMIS_SCHEDULING_CONTINUOUSPLAGIARISMCONTROLTRIGGERTIME = '{{ artemis_scheduling_continuous_plagiarism_control_trigger_time }}'
ARTEMIS_DATAEXPORT_DAYSBETWEENDATAEXPORTS = '{{ artemis_data_export_days_between_data_exports }}'
ARTEMIS_PLAGIARISMCHECKS_PLAGIARISMRESULTSLIMIT = '{{ artemis_plagiarism_checks_plagiarism_results_limit }}'
{% if artemis_jhipster_jwt is not none %}
JHIPSTER_SECURITY_AUTHENTICATION_JWT_BASE64SECRET='{{ artemis_jhipster_jwt }}'
JHIPSTER_SECURITY_AUTHENTICATION_JWT_TOKENVALIDITYINSECONDS='259200'
JHIPSTER_SECURITY_AUTHENTICATION_JWT_TOKENVALIDITYINSECONDSFORREMEMBERME='2592000'
{% endif %}
{% if is_multinode_install|bool == true and artemis_jhipster_registry_password is not none  %}
JHIPSTER_REGISTRY_PASSWORD='{{ artemis_jhipster_registry_password }}'
{% endif %}
JHIPSTER_MAIL_BASEURL='{{ artemis_server_url }}'
JHIPSTER_MAIL_FROM='{{artemis_notification_from}} <{{ artemis_email.split('@')[0] }}+notification@{{ artemis_email.split('@')[1] }}>'
INFO_GUIDEDTOUR_COURSESHORTNAME='artemistutorial'
INFO_GUIDEDTOUR_TOURS_0_CANCELTOUR=''
INFO_GUIDEDTOUR_TOURS_1_CODEEDITORTOUR='tutorial'
INFO_GUIDEDTOUR_TOURS_2_COURSEOVERVIEWTOUR=''
INFO_GUIDEDTOUR_TOURS_3_COURSEEXERCISEOVERVIEWTOUR='tutorial'
INFO_GUIDEDTOUR_TOURS_4_MODELINGTOUR='UML Class Diagram'
INFO_GUIDEDTOUR_TOURS_5_PROGRAMMINGEXERCISEFAILTOUR='tutorial'
INFO_GUIDEDTOUR_TOURS_6_PROGRAMMINGEXERCISESUCCESSTOUR='tutorial'
INFO_CONTACT='{{ artemis_email }}'
INFO_IMPRINT='https://ase.in.tum.de/lehrstuhl_1/component/content/article/179-imprint'
{% if is_testserver is defined and is_testserver is sameas true %}
INFO_TESTSERVER='true'
{% endif %}
{% if is_testserver is defined and is_testserver is sameas false %}
INFO_TESTSERVER='false'
{% endif %}
INFO_TEXTASSESSMENTANALYTICSENABLED='true'
INFO_SENTRY_DSN='https://ceeb3e72ec094684aefbb132f87231f2@sentry.ase.in.tum.de/2'
{% if post_hog is defined %}
INFO_POSTHOG_HOST='{{ post_hog.host }}'
INFO_POSTHOG_TOKEN='{{ post_hog.token }}'
{% endif %}
{% if is_multinode_install and artemis_eureka_urls is defined and hazelcast_address is defined %}
EUREKA_CLIENT_ENABLED='true'
EUREKA_CLIENT_SERVICEURL_DEFAULTZONE='{{ artemis_eureka_urls }}'
EUREKA_INSTANCE_PREFERIPADDRESS='true'
{% if hazelcast_address is defined and hazelcast_address != "" %}
EUREKA_INSTANCE_IPADDRESS='{{ hazelcast_address }}'
{% endif %}
EUREKA_INSTANCE_APPNAME='Artemis'
{% if artemis_eureka_instance_id is defined and artemis_eureka_instance_id != "" %}
EUREKA_INSTANCE_INSTANCEID='Artemis:{{ artemis_eureka_instance_id }}'
{% endif %}
{% endif %}
LOGGING_FILE_NAME='{{ artemis_working_directory }}/artemis.log'
MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED='true'
# TODO: Remove after 7.0.0 is released & deployed
MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED='true'
