---
- name: Add repo for the latest stable ngnix version
  become: true
  block:
    - name: Ngnix | No apt key
      ansible.builtin.get_url:
        url: http://nginx.org/keys/nginx_signing.key
        dest: /etc/apt/trusted.gpg.d/nginx.asc

    - name: Nginx | Apt source
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/nginx.asc] http://nginx.org/packages/mainline/ubuntu/ {{ ansible_distribution_release }} nginx"
        state: present

- name: Install nginx package
  become: true
  apt:
    name: nginx
    state: latest
    update_cache: true
  notify: Restart nginx

- name: Enable nginx service
  become: true
  systemd:
    daemon_reload: true
    name: nginx
    enabled: true
    masked: false
  notify: Restart nginx

- name: Start nginx
  become: true
  service:
    name: nginx
    state: started

- name: Ensure nginx sites-enabled exists
  become: true
  file:
    path: /etc/nginx/sites-enabled
    state: directory
    mode: "755"

- name: Ensure nginx sites-available exists
  become: true
  file:
    path: /etc/nginx/sites-available
    state: directory
    mode: "755"

- name: Generate DH Parameters (This will take a while....)
  become: true
  community.crypto.openssl_dhparam:
    path: /etc/nginx/dhparam.pem
    size: 4096
  when:
    - proxy_generate_dh_param|bool

- name: Adjust worker_rlimit_nofile in nginx.conf
  become: true
  lineinfile:
    path: /etc/nginx/nginx.conf
    regexp: "^worker_rlimit_nofile"
    line: "worker_rlimit_nofile {{ proxy_worker_rlmmiit_nofile }};"
    insertbefore: BOF
    state: present
  notify: Restart nginx

- name: Adjust worker_connections in nginx.conf
  become: true
  lineinfile:
    path: /etc/nginx/nginx.conf
    regexp: "^\\s*worker_connections\\s+\\d+"
    line: "\tworker_connections {{ proxy_worker_connections }};"
    backrefs: true
  notify: Restart nginx

- name: Adjust worker_connections in nginx.conf
  become: true
  lineinfile:
    path: /etc/nginx/nginx.conf
    regexp: "^\\t(# )?server_names_hash_bucket_size"
    line: "\tserver_names_hash_bucket_size {{ proxy_server_names_hash_bucket_size }};"
    insertafter: "http {"
    firstmatch: true
    state: present
  notify: Restart nginx

- name: Include sites-enabled in nginx.conf
  become: true
  lineinfile:
    path: /etc/nginx/nginx.conf
    regexp: "^(\\s*)include /etc/nginx/sites-enabled/\\*;"
    line: "\tinclude /etc/nginx/sites-enabled/*;"
    insertafter: "http {"
    firstmatch: true
    state: present
  notify: Restart nginx

- name: Adjust gzip settings in nginx.conf
  become: true
  lineinfile:
    path: /etc/nginx/nginx.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    insertafter: "http {"
    firstmatch: true
    state: present
  with_items:
    - regexp: "^(\\s*)gzip(\\s+)(\\w*);"
      line: "\tgzip on;"
    - regexp: "^(\\s*)gzip_types(\\s+)[/\\-\\w\\s]*;"
      line: "\tgzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css;"
  notify: Restart nginx

- name: Include SSH git stream configuration in nginx.conf
  become: true
  blockinfile:
    dest: /etc/nginx/nginx.conf
    append_newline: true
    prepend_newline: true
    block: |
      stream {
        upstream artemis_ssh {
          include artemis-ssh-upstream.conf;
        }
        server {
          listen 7921;
          proxy_pass artemis_ssh;
        }
      }
  when: proxy_forward_ssh
  notify: Restart nginx

- name: Copy artemis-ssh-upstream.conf
  become: true
  template:
    src: artemis-ssh-upstream.conf.j2
    dest: /etc/nginx/artemis-ssh-upstream.conf
    mode: "644"
  when: proxy_forward_ssh
  notify: Restart nginx

- name: Copy timeouts.conf
  become: true
  template:
    src: nginx_timeouts.conf.j2
    dest: /etc/nginx/conf.d/timeouts.conf
    mode: "644"
  notify: Restart nginx

- name: Copy proxy.conf
  become: true
  template:
    src: nginx_proxy.conf.j2
    dest: /etc/nginx/sites-available/proxy.conf
    mode: "644"
  notify: Reload nginx

- name: Enable proxy site config
  become: true
  file:
    src: /etc/nginx/sites-available/proxy.conf
    dest: /etc/nginx/sites-enabled/proxy.conf
    owner: root
    group: root
    state: link
  notify: Reload nginx

- name: Disable default and legacy site config
  become: true
  file:
    dest: "/etc/nginx/sites-enabled/{{ item }}"
    state: absent
  notify: Reload nginx
  with_items:
    - "default"
    - "artemis.conf"
    - "reverse_proxy.conf"

- name: Ensure old 502.html error page is removed
  become: true
  file:
    path: /usr/share/nginx/html/502.html
    state: absent

- name: Copy nginx 503.html
  become: true
  copy:
    src: nginx_503.html
    dest: /usr/share/nginx/html/503.html
    mode: "644"
  notify: Reload nginx

- name: Validate nginx config
  become: true
  command: nginx -t
  changed_when: false

- name: Ensure file-max limit in sysctl.conf
  become: true
  lineinfile:
    path: /etc/sysctl.conf
    regexp: "^fs.file-max="
    line: fs.file-max=2000000
    state: present
  notify: Apply sysctl

- name: Flush handlers
  meta: flush_handlers

- name: Copy security-limits nginx.conf
  become: true
  copy:
    src: nginx_security_limits.conf
    dest: /etc/security/limits.d/nginx.conf
    mode: "644"
  notify: Reboot system

- name: Ensure systemd.conf.d folder exists
  become: true
  file:
    path: /etc/systemd/system.conf.d/
    state: directory
    mode: "755"

- name: Copy systemd-limits nginx.conf
  become: true
  copy:
    src: nginx_systemd_limits.conf
    dest: /etc/systemd/system.conf.d/limits.conf
    mode: "644"
  notify: Reboot system
